{
  "C:\\Users\\Canye\\Desktop\\UNMSM\\10\\Tendencias de Arquitectura de Software\\taskmaster-pro": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "taskmaster-pro",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "dev",
              "environment": {
                "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
              },
              "apiGateway": {
                "apiKeys": "<REDACTED>"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/TaskMasterPro-Tareas"
                }
              ],
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "CreateTareaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/taskmaster-pro-dev-createTarea"
                    }
                  },
                  "GetTareasLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/taskmaster-pro-dev-getTareas"
                    }
                  },
                  "GetTareaByIdLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/taskmaster-pro-dev-getTareaById"
                    }
                  },
                  "UpdateTareaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/taskmaster-pro-dev-updateTarea"
                    }
                  },
                  "DeleteTareaLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/taskmaster-pro-dev-deleteTarea"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "taskmaster-pro",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/taskmaster-pro-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/taskmaster-pro-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem",
                                  "dynamodb:GetItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:Scan",
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/TaskMasterPro-Tareas"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "taskmaster-pro",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateTareaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                        "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                      },
                      "Handler": "handlers/createTarea.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "taskmaster-pro-dev-createTarea",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateTareaLogGroup"
                    ]
                  },
                  "GetTareasLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                        "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                      },
                      "Handler": "handlers/getTareas.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "taskmaster-pro-dev-getTareas",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetTareasLogGroup"
                    ]
                  },
                  "GetTareaByIdLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                        "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                      },
                      "Handler": "handlers/getTareaById.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "taskmaster-pro-dev-getTareaById",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetTareaByIdLogGroup"
                    ]
                  },
                  "UpdateTareaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                        "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                      },
                      "Handler": "handlers/updateTarea.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "taskmaster-pro-dev-updateTarea",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateTareaLogGroup"
                    ]
                  },
                  "DeleteTareaLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                        "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                      },
                      "Handler": "handlers/deleteTarea.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "taskmaster-pro-dev-deleteTarea",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteTareaLogGroup"
                    ]
                  },
                  "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateTareaLambdaFunction"
                      },
                      "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
                    }
                  },
                  "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetTareasLambdaFunction"
                      },
                      "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
                    }
                  },
                  "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetTareaByIdLambdaFunction"
                      },
                      "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
                    }
                  },
                  "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateTareaLambdaFunction"
                      },
                      "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
                    }
                  },
                  "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteTareaLambdaFunction"
                      },
                      "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-taskmaster-pro",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTareas": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "tareas",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTareasTareaidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTareas"
                      },
                      "PathPart": "{tareaId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTareasOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareas"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTareasTareaidVarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareasTareaidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTareasPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareas"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateTareaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateTareaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTareasGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareas"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetTareasLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetTareasLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTareasTareaidVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {
                        "method.request.path.tareaId": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareasTareaidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetTareaByIdLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayTaskmasterproRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "GetTareaByIdLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTareasTareaidVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {
                        "method.request.path.tareaId": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareasTareaidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateTareaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayTaskmasterproRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "UpdateTareaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTareasTareaidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {
                        "method.request.path.tareaId": true
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTareasTareaidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteTareaLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayTaskmasterproRequestValidator"
                      }
                    },
                    "DependsOn": [
                      "DeleteTareaLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayTaskmasterproRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "taskmaster-pro-dev | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayDeployment1731352812727": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTareasOptions",
                      "ApiGatewayMethodTareasTareaidVarOptions",
                      "ApiGatewayMethodTareasPost",
                      "ApiGatewayMethodTareasGet",
                      "ApiGatewayMethodTareasTareaidVarGet",
                      "ApiGatewayMethodTareasTareaidVarPut",
                      "ApiGatewayMethodTareasTareaidVarDelete"
                    ]
                  },
                  "ApiGatewayApiKey1": "<REDACTED>",
                  "ApiGatewayUsagePlan": {
                    "Type": "AWS::ApiGateway::UsagePlan",
                    "DependsOn": "ApiGatewayDeployment1731352812727",
                    "Properties": {
                      "ApiStages": [
                        {
                          "ApiId": {
                            "Ref": "ApiGatewayRestApi"
                          },
                          "Stage": "dev"
                        }
                      ],
                      "Description": "Usage plan for taskmaster-pro dev stage",
                      "UsagePlanName": "taskmaster-pro-dev"
                    }
                  },
                  "ApiGatewayUsagePlanKey1": {
                    "Type": "AWS::ApiGateway::UsagePlanKey",
                    "Properties": {
                      "KeyId": {
                        "Ref": "ApiGatewayApiKey1"
                      },
                      "KeyType": "API_KEY",
                      "UsagePlanId": {
                        "Ref": "ApiGatewayUsagePlan"
                      }
                    }
                  },
                  "CreateTareaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateTareaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetTareasLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetTareasLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetTareaByIdLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetTareaByIdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateTareaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateTareaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteTareaLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteTareaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "TareasDynamoDBTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "TaskMasterPro-Tareas",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "tareaId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "tareaId",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateTareaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U"
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-CreateTareaLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetTareasLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI"
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-GetTareasLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetTareaByIdLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw"
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-GetTareaByIdLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateTareaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ"
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-UpdateTareaLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteTareaLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI"
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-DeleteTareaLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-taskmaster-pro-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "createTarea": {
                "handler": "handlers/createTarea.handler",
                "events": [
                  {
                    "http": {
                      "path": "tareas",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "private": true,
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "taskmaster-pro-dev-createTarea",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U"
              },
              "getTareas": {
                "handler": "handlers/getTareas.handler",
                "events": [
                  {
                    "http": {
                      "path": "tareas",
                      "method": "get",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "private": true,
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "taskmaster-pro-dev-getTareas",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI"
              },
              "getTareaById": {
                "handler": "handlers/getTareaById.handler",
                "events": [
                  {
                    "http": {
                      "path": "tareas/{tareaId}",
                      "method": "get",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "parameters": {
                          "method.request.path.tareaId": true
                        }
                      },
                      "private": true,
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "taskmaster-pro-dev-getTareaById",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw"
              },
              "updateTarea": {
                "handler": "handlers/updateTarea.handler",
                "events": [
                  {
                    "http": {
                      "path": "tareas/{tareaId}",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PUT"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "parameters": {
                          "method.request.path.tareaId": true
                        }
                      },
                      "private": true,
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "taskmaster-pro-dev-updateTarea",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ"
              },
              "deleteTarea": {
                "handler": "handlers/deleteTarea.handler",
                "events": [
                  {
                    "http": {
                      "path": "tareas/{tareaId}",
                      "method": "delete",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "parameters": {
                          "method.request.path.tareaId": true
                        }
                      },
                      "private": true,
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "taskmaster-pro-dev-deleteTarea",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI"
              }
            },
            "plugins": [
              "serverless-offline"
            ],
            "resources": {
              "Resources": {
                "TareasDynamoDBTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "TaskMasterPro-Tareas",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "tareaId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "tareaId",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\Canye\\Desktop\\UNMSM\\10\\Tendencias de Arquitectura de Software\\taskmaster-pro",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Canye\\Desktop\\UNMSM\\10\\Tendencias de Arquitectura de Software\\taskmaster-pro",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "taskmaster-pro",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "stage": "dev",
        "environment": {
          "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
        },
        "apiGateway": {
          "apiKeys": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem",
              "dynamodb:Scan",
              "dynamodb:Query"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/TaskMasterPro-Tareas"
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CreateTareaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/taskmaster-pro-dev-createTarea"
              }
            },
            "GetTareasLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/taskmaster-pro-dev-getTareas"
              }
            },
            "GetTareaByIdLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/taskmaster-pro-dev-getTareaById"
              }
            },
            "UpdateTareaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/taskmaster-pro-dev-updateTarea"
              }
            },
            "DeleteTareaLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/taskmaster-pro-dev-deleteTarea"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "taskmaster-pro",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/taskmaster-pro-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/taskmaster-pro-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Scan",
                            "dynamodb:Query"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/TaskMasterPro-Tareas"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "taskmaster-pro",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateTareaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                  "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                },
                "Handler": "handlers/createTarea.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "taskmaster-pro-dev-createTarea",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateTareaLogGroup"
              ]
            },
            "GetTareasLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                  "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                },
                "Handler": "handlers/getTareas.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "taskmaster-pro-dev-getTareas",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTareasLogGroup"
              ]
            },
            "GetTareaByIdLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                  "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                },
                "Handler": "handlers/getTareaById.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "taskmaster-pro-dev-getTareaById",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTareaByIdLogGroup"
              ]
            },
            "UpdateTareaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                  "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                },
                "Handler": "handlers/updateTarea.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "taskmaster-pro-dev-updateTarea",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateTareaLogGroup"
              ]
            },
            "DeleteTareaLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
                  "S3Key": "serverless/taskmaster-pro/dev/1731352816864-2024-11-11T19:20:16.864Z/taskmaster-pro.zip"
                },
                "Handler": "handlers/deleteTarea.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "taskmaster-pro-dev-deleteTarea",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "TaskMasterPro-Tareas"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteTareaLogGroup"
              ]
            },
            "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateTareaLambdaFunction"
                },
                "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
              }
            },
            "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTareasLambdaFunction"
                },
                "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
              }
            },
            "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTareaByIdLambdaFunction"
                },
                "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
              }
            },
            "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateTareaLambdaFunction"
                },
                "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
              }
            },
            "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteTareaLambdaFunction"
                },
                "CodeSha256": "YXrVmFuFz86hPO8lImTeIMGF9Ve7KzugQV29h2GMlMg="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-taskmaster-pro",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTareas": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "tareas",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTareasTareaidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTareas"
                },
                "PathPart": "{tareaId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTareasOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareas"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTareasTareaidVarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareasTareaidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTareasPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareas"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateTareaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateTareaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTareasGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareas"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTareasLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetTareasLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTareasTareaidVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {
                  "method.request.path.tareaId": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareasTareaidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTareaByIdLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayTaskmasterproRequestValidator"
                }
              },
              "DependsOn": [
                "GetTareaByIdLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTareasTareaidVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {
                  "method.request.path.tareaId": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareasTareaidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateTareaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayTaskmasterproRequestValidator"
                }
              },
              "DependsOn": [
                "UpdateTareaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTareasTareaidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {
                  "method.request.path.tareaId": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTareasTareaidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteTareaLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayTaskmasterproRequestValidator"
                }
              },
              "DependsOn": [
                "DeleteTareaLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayTaskmasterproRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "taskmaster-pro-dev | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayDeployment1731352812727": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTareasOptions",
                "ApiGatewayMethodTareasTareaidVarOptions",
                "ApiGatewayMethodTareasPost",
                "ApiGatewayMethodTareasGet",
                "ApiGatewayMethodTareasTareaidVarGet",
                "ApiGatewayMethodTareasTareaidVarPut",
                "ApiGatewayMethodTareasTareaidVarDelete"
              ]
            },
            "ApiGatewayApiKey1": "<REDACTED>",
            "ApiGatewayUsagePlan": {
              "Type": "AWS::ApiGateway::UsagePlan",
              "DependsOn": "ApiGatewayDeployment1731352812727",
              "Properties": {
                "ApiStages": [
                  {
                    "ApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "Stage": "dev"
                  }
                ],
                "Description": "Usage plan for taskmaster-pro dev stage",
                "UsagePlanName": "taskmaster-pro-dev"
              }
            },
            "ApiGatewayUsagePlanKey1": {
              "Type": "AWS::ApiGateway::UsagePlanKey",
              "Properties": {
                "KeyId": {
                  "Ref": "ApiGatewayApiKey1"
                },
                "KeyType": "API_KEY",
                "UsagePlanId": {
                  "Ref": "ApiGatewayUsagePlan"
                }
              }
            },
            "CreateTareaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateTareaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetTareasLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTareasLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetTareaByIdLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTareaByIdLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateTareaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateTareaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteTareaLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteTareaLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "TareasDynamoDBTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "TaskMasterPro-Tareas",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "tareaId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "tareaId",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
              "Export": {
                "Name": "sls-taskmaster-pro-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateTareaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U"
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-CreateTareaLambdaFunctionQualifiedArn"
              }
            },
            "GetTareasLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI"
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-GetTareasLambdaFunctionQualifiedArn"
              }
            },
            "GetTareaByIdLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw"
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-GetTareaByIdLambdaFunctionQualifiedArn"
              }
            },
            "UpdateTareaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ"
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-UpdateTareaLambdaFunctionQualifiedArn"
              }
            },
            "DeleteTareaLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI"
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-DeleteTareaLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-taskmaster-pro-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createTarea": {
          "handler": "handlers/createTarea.handler",
          "events": [
            {
              "http": {
                "path": "tareas",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "taskmaster-pro-dev-createTarea",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateTareaLambdaVersion6tUt7ZhJnhiVqcLvgysdSIS9fG8rGceaol76Nk6U"
        },
        "getTareas": {
          "handler": "handlers/getTareas.handler",
          "events": [
            {
              "http": {
                "path": "tareas",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "taskmaster-pro-dev-getTareas",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetTareasLambdaVersionuRHl338zoo21dYh0HgYZFcAN2iXkUI38gzBC2Im3xI"
        },
        "getTareaById": {
          "handler": "handlers/getTareaById.handler",
          "events": [
            {
              "http": {
                "path": "tareas/{tareaId}",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "request": {
                  "parameters": {
                    "method.request.path.tareaId": true
                  }
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "taskmaster-pro-dev-getTareaById",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetTareaByIdLambdaVersionTsHrQ0uhhbToifVhK1qfGIpgpiOOMzMoC4tVyKFAaEw"
        },
        "updateTarea": {
          "handler": "handlers/updateTarea.handler",
          "events": [
            {
              "http": {
                "path": "tareas/{tareaId}",
                "method": "put",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "PUT"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "request": {
                  "parameters": {
                    "method.request.path.tareaId": true
                  }
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "taskmaster-pro-dev-updateTarea",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateTareaLambdaVersionXlCLE8Ngs0B2iVkWGnTDJw8j8WpyU6pH9ccSqahC3pQ"
        },
        "deleteTarea": {
          "handler": "handlers/deleteTarea.handler",
          "events": [
            {
              "http": {
                "path": "tareas/{tareaId}",
                "method": "delete",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "request": {
                  "parameters": {
                    "method.request.path.tareaId": true
                  }
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "taskmaster-pro-dev-deleteTarea",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteTareaLambdaVersionWLYQFG18C6r9DriPlaAEuJ1SCy3Yzeninjg3WbhLFAI"
        }
      },
      "plugins": [
        "serverless-offline"
      ],
      "resources": {
        "Resources": {
          "TareasDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "TaskMasterPro-Tareas",
              "AttributeDefinitions": [
                {
                  "AttributeName": "tareaId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "tareaId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: taskmaster-pro\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-east-1\r\n  stage: dev\r\n\r\n  environment:\r\n    DYNAMODB_TABLE: TaskMasterPro-Tareas\r\n\r\n  apiGateway:\r\n    apiKeys:\r\n      - ${self:provider.stage}-api-key\r\n\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - dynamodb:PutItem\r\n        - dynamodb:GetItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n        - dynamodb:Scan\r\n        - dynamodb:Query\r\n      Resource:\r\n        - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}\"\r\n\r\nfunctions:\r\n  createTarea:\r\n    handler: handlers/createTarea.handler\r\n    events:\r\n      - http:\r\n          path: tareas\r\n          method: post\r\n          cors: true\r\n          private: true\r\n\r\n  getTareas:\r\n    handler: handlers/getTareas.handler\r\n    events:\r\n      - http:\r\n          path: tareas\r\n          method: get\r\n          cors: true\r\n          private: true\r\n\r\n  getTareaById:\r\n    handler: handlers/getTareaById.handler\r\n    events:\r\n      - http:\r\n          path: tareas/{tareaId}\r\n          method: get\r\n          cors: true\r\n          request:\r\n            parameters:\r\n              paths:\r\n                tareaId: true\r\n          private: true\r\n\r\n  updateTarea:\r\n    handler: handlers/updateTarea.handler\r\n    events:\r\n      - http:\r\n          path: tareas/{tareaId}\r\n          method: put\r\n          cors: true\r\n          request:\r\n            parameters:\r\n              paths:\r\n                tareaId: true\r\n          private: true\r\n\r\n  deleteTarea:\r\n    handler: handlers/deleteTarea.handler\r\n    events:\r\n      - http:\r\n          path: tareas/{tareaId}\r\n          method: delete\r\n          cors: true\r\n          request:\r\n            parameters:\r\n              paths:\r\n                tareaId: true\r\n          private: true\r\n\r\nplugins:\r\n  - serverless-offline\r\n\r\nresources:\r\n  Resources:\r\n    TareasDynamoDBTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.DYNAMODB_TABLE}\r\n        AttributeDefinitions:\r\n          - AttributeName: tareaId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: tareaId\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "0bacfa1a8bac60a9698464d47b00b9be",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "ec74b46a-7e34-4741-8336-6b026fc6a411",
    "orgName": "yeysoncano",
    "userId": "kf0jY4rtY7l1ztrxV9",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "yeysoncano",
    "subscription": null,
    "userEmail": "yeyson.cano.carbajo@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "619071341400",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "taskmaster-pro-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:619071341400:stack/taskmaster-pro-dev/d6829e80-a05a-11ef-be90-122eb448d185",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:619071341400:stack/taskmaster-pro-dev/d6829e80-a05a-11ef-be90-122eb448d185",
    "serviceProviderAwsCfStackCreated": "2024-11-11T18:29:07.943Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-11T19:20:25.867Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "UpdateTareaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:619071341400:function:taskmaster-pro-dev-updateTarea:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-taskmaster-pro-dev-UpdateTareaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteTareaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:619071341400:function:taskmaster-pro-dev-deleteTarea:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-taskmaster-pro-dev-DeleteTareaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTareaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:619071341400:function:taskmaster-pro-dev-createTarea:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-taskmaster-pro-dev-CreateTareaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetTareasLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:619071341400:function:taskmaster-pro-dev-getTareas:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-taskmaster-pro-dev-GetTareasLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetTareaByIdLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:619071341400:function:taskmaster-pro-dev-getTareaById:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-taskmaster-pro-dev-GetTareaByIdLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://o4ohiixvpd.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-taskmaster-pro-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-eddb0a53-387e",
        "ExportName": "sls-taskmaster-pro-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}